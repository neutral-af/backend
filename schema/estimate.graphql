type GetEstimate {
    fromFlights(flights: [Flight!]!, options: EstimateOptions = {}): Estimate
    fromID(id: ID, provider: Provider): Estimate
}

input Flight {
    # Either (departure,arrival) or (flightNumber,date) must be provided
    # TODO: is there a better way to have an optional interface
    departure: String
    arrival: String
    flightNumber: String
    date: String
}

type Estimate {
    id: ID! # The ID can be used to convert an estimate to a purchase
    price(currency: Currency = USD): Price # Price obj defined in globals
    provider: Provider
    carbon: Float # kg CO2
    details: String # json blob
}

input EstimateOptions {
    provider: Provider = Cloverly # Default provider
}
